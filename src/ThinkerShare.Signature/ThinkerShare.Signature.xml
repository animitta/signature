<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ThinkerShare.Signature</name>
    </assembly>
    <members>
        <member name="T:ThinkerShare.Signature.ComplexRecord">
            <summary>
            复杂文件头记录
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.ComplexRecord.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            构造器
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <param name="offsetSize">偏移</param>
            <param name="description">描述</param>
        </member>
        <member name="P:ThinkerShare.Signature.ComplexRecord.Offsets">
            <summary>
            请求头偏移序列
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.ComplexRecord.Match(System.ReadOnlySpan{System.Byte})">
            <summary>
            文件内容是否匹配当前的元数据
            </summary>
            <param name="data">文件内容</param>
            <returns>是否匹配</returns>
        </member>
        <member name="T:ThinkerShare.Signature.Extensions.ComplexRecordExtensions">
            <summary>
            复杂文件头记录扩展
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Extensions.ComplexRecordExtensions.Match(System.Collections.Generic.IEnumerable{ThinkerShare.Signature.ComplexRecord},System.ReadOnlySpan{System.Byte},System.Boolean)">
            <summary>
            从ComplexRecord列表中匹配文件扩展名
            </summary>
            <param name="records">ComplexRecord列表</param>
            <param name="data">目标文件内容</param>
            <param name="matchAll">是否允许匹配多个格式的文件头记录</param>
            <returns>查找到的文件扩展名列表</returns>
        </member>
        <member name="T:ThinkerShare.Signature.Extensions.StringExtensions">
            <summary>
            字符串扩展方法
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Extensions.StringExtensions.GetMimeType(System.String)">
            <summary>
            获取文件扩展名对应的MIME TYPE
            </summary>
            <param name="extension">文件的扩展名(可以带有.或者不带有)</param>
            <returns>MIME TYPE字符串或application/octet-stream(未知文件扩展名)</returns>
        </member>
        <member name="T:ThinkerShare.Signature.Node">
            <summary>
            解析树节点
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Node.Depth">
            <summary>
            节点的深度
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Node.Parent">
            <summary>
            父节点
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Node.Extensions">
            <summary>
            文件扩展名列表
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Node.Children">
            <summary>
            子节点集合
            </summary>
        </member>
        <member name="T:ThinkerShare.Signature.Offset">
            <summary>
            复杂文件头记录中的偏移
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.#ctor(System.Collections.Generic.IReadOnlyList{System.String},System.Int32,System.Int32,System.Int32)">
            <summary>
            构造器
            </summary>
            <param name="sections">分节头数据</param>
            <param name="start">偏移起始索引</param>
            <param name="count">偏移内容长度</param>
            <param name="offsetSize">当前sections在数据文件中的偏移</param>
        </member>
        <member name="P:ThinkerShare.Signature.Offset.Start">
            <summary>
            偏移起始点索引
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Offset.Value">
            <summary>
            字节序列
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Offset.Count">
            <summary>
            偏移字节数
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.op_Equality(ThinkerShare.Signature.Offset,ThinkerShare.Signature.Offset)">
            <summary>
            重写==运算符
            </summary>
            <param name="left">左运算数</param>
            <param name="right">右运算数</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.op_Inequality(ThinkerShare.Signature.Offset,ThinkerShare.Signature.Offset)">
            <summary>
            重写!=运算符
            </summary>
            <param name="left">左运算数</param>
            <param name="right">右运算数</param>
            <returns>是否不相等</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.Equals(ThinkerShare.Signature.Offset)">
            <summary>
            强类型的比较实现
            </summary>
            <param name="other">其它对象</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.Equals(System.Object)">
            <summary>
            比较相等性
            </summary>
            <param name="other">其它对象</param>
            <returns>是否相等</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Offset.GetHashCode">
            <summary>
            重写哈希算法
            </summary>
            <returns>hash code</returns>
        </member>
        <member name="T:ThinkerShare.Signature.Record">
            <summary>
            文件头记录
            </summary>
        </member>
        <member name="F:ThinkerShare.Signature.Record.Separator">
            <summary>
            文件头记录的字节序列字符串中允许的分隔符列表
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Record.#ctor(System.String,System.String,System.Int32,System.String)">
            <summary>
            构造器
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <param name="offsetSize">偏移</param>
            <param name="description">描述</param>
        </member>
        <member name="P:ThinkerShare.Signature.Record.FrequentRecords">
            <summary>
            常用的文件类型
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.UnfrequentRecords">
            <summary>
            不常用的文件类型
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.Hex">
            <summary>
            文件头记录字节序列16进制字符串(非标准)
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.OffsetSize">
            <summary>
            偏移(需要补齐的任意前缀字节数)
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.Extensions">
            <summary>
            文件扩展名序列
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.Description">
            <summary>
            文件类型记录描述
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.IsComplex">
            <summary>
            是否是复合映射记录
            </summary>
        </member>
        <member name="P:ThinkerShare.Signature.Record.HexBytes">
            <summary>
            将文件头字符串表示转换为其实际二进制表示
            </summary>
            <returns>文件头实际字节内容</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Record.Create(System.String,System.String)">
            <summary>
            创建Record记录
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <returns>Record记录</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Record.Create(System.String,System.String,System.Int32)">
            <summary>
            创建Record记录
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <param name="offsetSize">文件头偏移</param>
            <returns>Record记录</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Record.Create(System.String,System.String,System.String)">
            <summary>
            创建Record记录
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <param name="description">描述</param>
            <returns>Record记录</returns>
        </member>
        <member name="M:ThinkerShare.Signature.Record.Create(System.String,System.String,System.Int32,System.String)">
            <summary>
            创建Record记录
            </summary>
            <param name="extensions">文件扩展名列表</param>
            <param name="hex">十六进制字符串</param>
            <param name="offsetSize">文件头偏移</param>
            <param name="description">描述</param>
            <returns>Record记录</returns>
        </member>
        <member name="T:ThinkerShare.Signature.Signature">
            <summary>
            探测器(树结构)
            Signatures参考: https://en.wikipedia.org/wiki/List_of_file_signatures
            </summary>
        </member>
        <member name="M:ThinkerShare.Signature.Signature.AddRecord(ThinkerShare.Signature.Record)">
            <summary>
            添加文件头记录
            </summary>
            <param name="record">文件头记录</param>
        </member>
        <member name="M:ThinkerShare.Signature.Signature.AddRecord(System.Collections.Generic.IReadOnlyList{System.Byte},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            添加新的头和扩展名映射
            </summary>
            <param name="data">文件头</param>
            <param name="extensions">文件扩展名列表</param>
        </member>
        <member name="M:ThinkerShare.Signature.Signature.AddRecords(System.Collections.Generic.IEnumerable{ThinkerShare.Signature.Record})">
            <summary>
            向探测器添加文件头的记录序列
            </summary>
            <param name="records">文件头记录序列</param>
        </member>
        <member name="M:ThinkerShare.Signature.Signature.Match(System.ReadOnlySpan{System.Byte},System.Boolean)">
            <summary>
            查找文件头的扩展名
            </summary>
            <param name="data">文件头</param>
            <param name="matchAll">是否匹配查找全部的库总名</param>
            <returns>匹配的文件扩展结果列表</returns>
        </member>
    </members>
</doc>
